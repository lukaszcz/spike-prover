Resetting all values
Opening ../examples/even_odd.spike

Successfully parsed sorts

Successfully parsed constructors

Successfully parsed functions

Successfully parsed axioms
All constructors are free
dico_const_string:
2 --> 0
-1 --> evenm
5 --> false
-6 --> oddc
-2 --> oddm
-4 --> odd
-5 --> evenr
-3 --> even
3 --> S
-7 --> plus
4 --> true

Successfully parsed equivalence relation

Successfully parsed statuses
dico_id_status:
Completing status dico with default status "Multiset"
AC symbols: 
Case 0: no AC symbols
Orienting axioms
	[ 17 ] plus (0, u1) -> u1 ;
	[ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;
	[ 19 ] evenr (0) -> true ;
	[ 20 ] evenr (1) -> false ;
	[ 21 ] evenr (S (S (u1))) -> evenr (u1) ;
	[ 22 ] evenr (u1) = true => oddc (u1) -> false ;
	[ 23 ] evenr (u1) = false => oddc (u1) -> true ;
	[ 24 ] evenm (0) -> true ;
	[ 25 ] evenm (S (u1)) -> oddm (u1) ;
	[ 26 ] oddm (0) -> false ;
	[ 27 ] oddm (S (u1)) -> evenm (u1) ;
	[ 28 ] even (0) -> true ;
	[ 29 ] odd (u1) = true => even (S (u1)) -> true ;
	[ 30 ] odd (u1) = false => even (S (u1)) -> false ;
	[ 31 ] odd (0) -> false ;
	[ 32 ] even (u1) = true => odd (S (u1)) -> true ;
	[ 33 ] even (u1) = false => odd (S (u1)) -> false ;
dico_order:
evenm: plus 0 S true false;
oddc: plus evenr 0 S true false;
oddm: plus 0 S true false;
odd: plus 0 S true false;
evenr: plus 0 S true false;
even: plus 0 S true false;
plus: 0 S;
dico_equivalence:
oddm ~ evenm
odd ~ even
Computing nullary sorts
Sort "bool" is nullary
Sort "nat" is not nullary
Computing nullary individuals
We do not have a boolean specification

Successfully parsed properties
Computing default priorities
Using default priorities
Generate will be attempted on the following positions:
Ind_pos_position ()

Successfully parsed strategies

Successfully parsed startpoint

Successfully parsed conjectures
	[ 34 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;

Successfully parsed conjectures
	[ 35 ] evenm (u1) = evenr (u1) ;

Successfully parsed conjectures
	[ 36 ] plus (u1, 0) = u1 ;

Successfully parsed conjectures
	[ 37 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;

Successfully parsed conjectures
	[ 38 ] even (plus (u1, u1)) = true ;
	[ 39 ] odd (S (plus (u1, u1))) = true ;

Successfully parsed conjectures
	[ 40 ] plus (u1, u2) = plus (u2, u1) ;

Successfully parsed conjectures
	[ 41 ] evenm (plus (u1, u1)) = true ;
	[ 42 ] oddm (plus (u1, u1)) = false ;

Successfully parsed conjectures
	[ 43 ] evenr (S (u1)) = true => true = oddm (u1) ;

Successfully parsed conjectures
	[ 44 ] oddc (u1) = oddm (u1) ;
Closing ../examples/even_odd.spike

Successfully parsed conjectures
	[ 45 ] plus (u1, plus (u2, u3)) = plus (plus (u1, u2), u3) ;


************************************************************
******************* Starting computation *******************
************************************************************


dico_st:
fullind = (repeat (stra, inst_var_rule), print_goals_history)
negative_clash_rule = delete(id,[try (negative_clash)])
subsumption_rule = delete(id,[try (subsumption (L&C))])
normalize = repeat try (delete(id,[negative_clash]), simplify(id,[eliminate_redundant_literal]), simplify(id,[eliminate_trivial_literal]), simplify(id,[positive_clash]), simplify(id,[congruence_closure]), simplify(id,[negative_decomposition]), simplify(id,[auto_simplification]), simplify(id,[rewriting (normalize, L&R, *)]), delete(id,[subsumption (L&C)]), simplify(id,[total_case_rewriting (builtin, R, *)]))
stra = repeat (try (tautology_rule, negative_clash_rule, subsumption_rule, decomposition_rule, rewriting_rule, print_goals_history, total_case_rewriting_add_premise_rule))
inst_var_rule = add_premise(generate,[try (id)])
recursive = try (delete, rewrite, add_premise(id,[generate]))
query = ?
generate_reduce = try (delete(id,[tautology]), rewrite)
rewriting_rule = simplify(id,[try (rewriting (rewrite, L&C&R, *))])
tautology_rule = delete(id,[try (tautology)])
total_case_rewriting_add_premise_rule = add_premise(total_case_rewriting (simplify_strat, R, *),[try (id)])
decompose = saturate (simplify(id,[positive_decomposition]), simplify(id,[negative_decomposition]))
clean = saturate (simplify(id,[eliminate_redundant_literal]), simplify(id,[eliminate_trivial_literal]), simplify(id,[positive_clash]))
simplify = saturate (delete, clean, decompose, simplify(id,[auto_simplification]))
total_case_rewriting_rule = simplify(id,[try (total_case_rewriting (simplify_strat, R, *))])
rewrite = try (simplify(id,[rewriting (normalize, R, *)]), simplify(id,[equational_rewriting (*)]), simplify(id,[partial_case_rewriting (R&L, *)]))
builtin = try (delete, rewrite, add_premise(id,[generate]))
decomposition_rule = simplify(id,[try (negative_decomposition)])
delete = saturate (delete(id,[tautology]), delete(id,[subsumption (R&L)]), delete(id,[negative_clash]))
Start point is now fullind

************************  Proving  *************************
[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using strategy 

fullind
************************************************************

Current goals E1 (1):
[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;


 The history of [ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
GENERATE 1 on
« [ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;

from the positions:
	true/1/[1] --> evenr (plus (u1, u3))
	false/1/[1] --> evenr (plus (u1, u2))
	false/2/[1] --> evenr (plus (u2, u3))
	true/1/[1-1] --> plus (u1, u3)
	false/1/[1-1] --> plus (u1, u2)
	false/2/[1-1] --> plus (u2, u3)
	
at true/1/[1-1] on 	plus (u1, u3) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, S (u4) !>

We obtain :

1) [ 56 ] evenr (plus (0, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 62 ] evenr (plus (S (u4), u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;


REWRITING 1: simplify by rewriting 
« [ 56 ] evenr (plus (0, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;


- rewriting at the position false/1/[1-1]:

plus (0, u2)
   is simplified by : plus (0, u1) -> u1   (from [ 17 ] of R)
   with substitution: <! u1, u2 !> into
u2


» [ 69 ] evenr (u2) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;


REWRITING 2: simplify by rewriting 
« [ 62 ] evenr (plus (S (u4), u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;


- rewriting at the position false/1/[1-1]:

plus (S (u4), u2)
   is simplified by : plus (S (u1), u2) -> S (plus (u1, u2))   (from [ 18 ] of R)
   with substitution: <! u1, u4 ; u2, u2 !> into
S (plus (u4, u2))


» [ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;


Current goals E2 (2):
[ 69 ] evenr (u2) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;
[ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;


 The history of [ 69 ] evenr (u2) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;

<! u1, 0 !> 
 	 on [ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;

<!  !> 
 	 on [ 56 ] evenr (plus (0, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;

 The corresponding instance is 
	[ 76 ] evenr (plus (0, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (0, u3)) = true ;

 The history of [ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

<! u1, S (u4) !> 
 	 on [ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;

<!  !> 
 	 on [ 62 ] evenr (plus (S (u4), u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

 The corresponding instance is 
	[ 78 ] evenr (plus (S (u4), u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (S (u4), u3)) = true ;
Current premises H2 (1):
[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;


GENERATE 2 on
« [ 69 ] evenr (u2) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;

from the positions:
	false/2/[1] --> evenr (plus (u2, u3))
	false/2/[1-1] --> plus (u2, u3)
	
at false/2/[1-1] on 	plus (u2, u3) 	 using the test substitutions:

 1) <! u2, 0 !>
 2) <! u2, S (u4) !>

We obtain :

1) [ 88 ] evenr (0) = true /\ evenr (u3) = true => evenr (u3) = true ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 94 ] evenr (S (u4)) = true /\ evenr (S (plus (u4, u3))) = true => evenr (u3) = true ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;

TAUTOLOGY: delete
« [ 88 ] evenr (0) = true /\ evenr (u3) = true => evenr (u3) = true ;


Current goals E3 (2):
[ 94 ] evenr (S (u4)) = true /\ evenr (S (plus (u4, u3))) = true => evenr (u3) = true ;
[ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;


 The history of [ 94 ] evenr (S (u4)) = true /\ evenr (S (plus (u4, u3))) = true => evenr (u3) = true ;

<! u1, 0 !> 
 	 on [ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;

<!  !> 
 	 on [ 56 ] evenr (plus (0, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;

<! u2, S (u4) !> 
 	 on [ 69 ] evenr (u2) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;

 The corresponding instance is 
	[ 100 ] evenr (plus (0, S (u4))) = true /\ evenr (plus (S (u4), u3)) = true => evenr (plus (0, u3)) = true ;

 The history of [ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

<! u1, S (u4) !> 
 	 on [ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;

<!  !> 
 	 on [ 62 ] evenr (plus (S (u4), u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

 The corresponding instance is 
	[ 102 ] evenr (plus (S (u4), u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (S (u4), u3)) = true ;
Current premises H3 (2):
[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 69 ] evenr (u2) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;


GENERATE 3 on
« [ 94 ] evenr (S (u4)) = true /\ evenr (S (plus (u4, u3))) = true => evenr (u3) = true ;

from the positions:
	false/2/[1] --> evenr (S (plus (u4, u3)))
	false/2/[1-1-1] --> plus (u4, u3)
	
at false/2/[1-1-1] on 	plus (u4, u3) 	 using the test substitutions:

 1) <! u4, 0 !>
 2) <! u4, S (u5) !>

We obtain :

1) [ 112 ] evenr (1) = true /\ evenr (S (u3)) = true => evenr (u3) = true ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 118 ] evenr (S (S (u5))) = true /\ evenr (S (S (plus (u5, u3)))) = true => evenr (u3) = true ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;


REWRITING 3: simplify by rewriting 
« [ 112 ] evenr (1) = true /\ evenr (S (u3)) = true => evenr (u3) = true ;


- rewriting at the position false/1/[1]:

evenr (1)
   is simplified by : evenr (1) -> false   (from [ 20 ] of R)
   with substitution: <!  !> into
false


» [ 127 ] false = true /\ evenr (S (u3)) = true => evenr (u3) = true ;


NEGATIVE CLASH: delete
« [ 127 ] false = true /\ evenr (S (u3)) = true => evenr (u3) = true ;


REWRITING 4: simplify by rewriting 
« [ 118 ] evenr (S (S (u5))) = true /\ evenr (S (S (plus (u5, u3)))) = true => evenr (u3) = true ;


- rewriting at the position false/2/[1]:

evenr (S (S (plus (u5, u3))))
   is simplified by : evenr (S (S (u1))) -> evenr (u1)   (from [ 21 ] of R)
   with substitution: <! u1, plus (u5, u3) !> into
evenr (plus (u5, u3))


» [ 130 ] evenr (S (S (u5))) = true /\ evenr (plus (u5, u3)) = true => evenr (u3) = true ;


REWRITING 5: simplify by rewriting 
« [ 130 ] evenr (S (S (u5))) = true /\ evenr (plus (u5, u3)) = true => evenr (u3) = true ;


- rewriting at the position false/1/[1]:

evenr (S (S (u5)))
   is simplified by : evenr (S (S (u1))) -> evenr (u1)   (from [ 21 ] of R)
   with substitution: <! u1, u5 !> into
evenr (u5)


» [ 138 ] evenr (u5) = true /\ evenr (plus (u5, u3)) = true => evenr (u3) = true ;


SUBSUMPTION: delete
« [ 138 ] evenr (u5) = true /\ evenr (plus (u5, u3)) = true => evenr (u3) = true ;

Subsumed in C1 by [ 69 ] evenr (u2) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;

	with epsilon = <! u2, u5 ; u3, u3 !>


Current goals E4 (1):
[ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;


 The history of [ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

<! u1, S (u4) !> 
 	 on [ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;

<!  !> 
 	 on [ 62 ] evenr (plus (S (u4), u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

 The corresponding instance is 
	[ 144 ] evenr (plus (S (u4), u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (S (u4), u3)) = true ;
Current premises H4 (3):
[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 69 ] evenr (u2) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;
[ 94 ] evenr (S (u4)) = true /\ evenr (S (plus (u4, u3))) = true => evenr (u3) = true ;


GENERATE 4 on
« [ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

from the positions:
	true/1/[1] --> evenr (S (plus (u4, u3)))
	false/1/[1] --> evenr (S (plus (u4, u2)))
	false/2/[1] --> evenr (plus (u2, u3))
	true/1/[1-1-1] --> plus (u4, u3)
	false/1/[1-1-1] --> plus (u4, u2)
	false/2/[1-1] --> plus (u2, u3)
	
at true/1/[1-1-1] on 	plus (u4, u3) 	 using the test substitutions:

 1) <! u4, 0 !>
 2) <! u4, S (u5) !>

We obtain :

1) [ 154 ] evenr (S (plus (0, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (u3)) = true ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 160 ] evenr (S (plus (S (u5), u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (S (plus (u5, u3)))) = true ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;


REWRITING 6: simplify by rewriting 
« [ 154 ] evenr (S (plus (0, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (u3)) = true ;


- rewriting at the position false/1/[1-1-1]:

plus (0, u2)
   is simplified by : plus (0, u1) -> u1   (from [ 17 ] of R)
   with substitution: <! u1, u2 !> into
u2


» [ 175 ] evenr (S (u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (u3)) = true ;


REWRITING 7: simplify by rewriting 
« [ 160 ] evenr (S (plus (S (u5), u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (S (plus (u5, u3)))) = true ;


- rewriting at the position true/1/[1]:

evenr (S (S (plus (u5, u3))))
   is simplified by : evenr (S (S (u1))) -> evenr (u1)   (from [ 21 ] of R)
   with substitution: <! u1, plus (u5, u3) !> into
evenr (plus (u5, u3))


» [ 180 ] evenr (S (plus (S (u5), u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u5, u3)) = true ;


REWRITING 8: simplify by rewriting 
« [ 180 ] evenr (S (plus (S (u5), u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u5, u3)) = true ;


- rewriting at the position false/1/[1-1-1]:

plus (S (u5), u2)
   is simplified by : plus (S (u1), u2) -> S (plus (u1, u2))   (from [ 18 ] of R)
   with substitution: <! u1, u5 ; u2, u2 !> into
S (plus (u5, u2))


» [ 189 ] evenr (S (S (plus (u5, u2)))) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u5, u3)) = true ;


REWRITING 9: simplify by rewriting 
« [ 189 ] evenr (S (S (plus (u5, u2)))) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u5, u3)) = true ;


- rewriting at the position false/1/[1]:

evenr (S (S (plus (u5, u2))))
   is simplified by : evenr (S (S (u1))) -> evenr (u1)   (from [ 21 ] of R)
   with substitution: <! u1, plus (u5, u2) !> into
evenr (plus (u5, u2))


» [ 198 ] evenr (plus (u5, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u5, u3)) = true ;


SUBSUMPTION: delete
« [ 198 ] evenr (plus (u5, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u5, u3)) = true ;

Subsumed in C1 by [ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;

	with epsilon = <! u1, u5 ; u2, u2 ; u3, u3 !>


Current goals E5 (1):
[ 175 ] evenr (S (u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (u3)) = true ;


 The history of [ 175 ] evenr (S (u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (u3)) = true ;

<! u1, S (u4) !> 
 	 on [ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;

<!  !> 
 	 on [ 62 ] evenr (plus (S (u4), u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

<! u4, 0 !> 
 	 on [ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

<!  !> 
 	 on [ 154 ] evenr (S (plus (0, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (u3)) = true ;

 The corresponding instance is 
	[ 205 ] evenr (plus (1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (1, u3)) = true ;
Current premises H5 (4):
[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 69 ] evenr (u2) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;
[ 94 ] evenr (S (u4)) = true /\ evenr (S (plus (u4, u3))) = true => evenr (u3) = true ;
[ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;


GENERATE 5 on
« [ 175 ] evenr (S (u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (u3)) = true ;

from the positions:
	false/2/[1] --> evenr (plus (u2, u3))
	false/2/[1-1] --> plus (u2, u3)
	
at false/2/[1-1] on 	plus (u2, u3) 	 using the test substitutions:

 1) <! u2, 0 !>
 2) <! u2, S (u5) !>

We obtain :

1) [ 215 ] evenr (1) = true /\ evenr (u3) = true => evenr (S (u3)) = true ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 221 ] evenr (S (S (u5))) = true /\ evenr (S (plus (u5, u3))) = true => evenr (S (u3)) = true ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;


REWRITING 10: simplify by rewriting 
« [ 215 ] evenr (1) = true /\ evenr (u3) = true => evenr (S (u3)) = true ;


- rewriting at the position false/1/[1]:

evenr (1)
   is simplified by : evenr (1) -> false   (from [ 20 ] of R)
   with substitution: <!  !> into
false


» [ 232 ] false = true /\ evenr (u3) = true => evenr (S (u3)) = true ;


NEGATIVE CLASH: delete
« [ 232 ] false = true /\ evenr (u3) = true => evenr (S (u3)) = true ;


REWRITING 11: simplify by rewriting 
« [ 221 ] evenr (S (S (u5))) = true /\ evenr (S (plus (u5, u3))) = true => evenr (S (u3)) = true ;


- rewriting at the position false/1/[1]:

evenr (S (S (u5)))
   is simplified by : evenr (S (S (u1))) -> evenr (u1)   (from [ 21 ] of R)
   with substitution: <! u1, u5 !> into
evenr (u5)


» [ 235 ] evenr (u5) = true /\ evenr (S (plus (u5, u3))) = true => evenr (S (u3)) = true ;


Current goals E6 (1):
[ 235 ] evenr (u5) = true /\ evenr (S (plus (u5, u3))) = true => evenr (S (u3)) = true ;


 The history of [ 235 ] evenr (u5) = true /\ evenr (S (plus (u5, u3))) = true => evenr (S (u3)) = true ;

<! u1, S (u4) !> 
 	 on [ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;

<!  !> 
 	 on [ 62 ] evenr (plus (S (u4), u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

<! u4, 0 !> 
 	 on [ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;

<!  !> 
 	 on [ 154 ] evenr (S (plus (0, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (u3)) = true ;

<! u2, S (u5) !> 
 	 on [ 175 ] evenr (S (u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (u3)) = true ;

<!  !> 
 	 on [ 221 ] evenr (S (S (u5))) = true /\ evenr (S (plus (u5, u3))) = true => evenr (S (u3)) = true ;

 The corresponding instance is 
	[ 248 ] evenr (plus (1, S (u5))) = true /\ evenr (plus (S (u5), u3)) = true => evenr (plus (1, u3)) = true ;
Current premises H6 (5):
[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 69 ] evenr (u2) = true /\ evenr (plus (u2, u3)) = true => evenr (u3) = true ;
[ 94 ] evenr (S (u4)) = true /\ evenr (S (plus (u4, u3))) = true => evenr (u3) = true ;
[ 72 ] evenr (S (plus (u4, u2))) = true /\ evenr (plus (u2, u3)) = true => evenr (S (plus (u4, u3))) = true ;
[ 175 ] evenr (S (u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (u3)) = true ;


GENERATE 6 on
« [ 235 ] evenr (u5) = true /\ evenr (S (plus (u5, u3))) = true => evenr (S (u3)) = true ;

from the positions:
	false/2/[1] --> evenr (S (plus (u5, u3)))
	false/2/[1-1-1] --> plus (u5, u3)
	
at false/2/[1-1-1] on 	plus (u5, u3) 	 using the test substitutions:

 1) <! u5, 0 !>
 2) <! u5, S (u6) !>

We obtain :

1) [ 258 ] evenr (0) = true /\ evenr (S (u3)) = true => evenr (S (u3)) = true ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 264 ] evenr (S (u6)) = true /\ evenr (S (S (plus (u6, u3)))) = true => evenr (S (u3)) = true ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;

TAUTOLOGY: delete
« [ 258 ] evenr (0) = true /\ evenr (S (u3)) = true => evenr (S (u3)) = true ;


REWRITING 12: simplify by rewriting 
« [ 264 ] evenr (S (u6)) = true /\ evenr (S (S (plus (u6, u3)))) = true => evenr (S (u3)) = true ;


- rewriting at the position false/2/[1]:

evenr (S (S (plus (u6, u3))))
   is simplified by : evenr (S (S (u1))) -> evenr (u1)   (from [ 21 ] of R)
   with substitution: <! u1, plus (u6, u3) !> into
evenr (plus (u6, u3))


» [ 276 ] evenr (S (u6)) = true /\ evenr (plus (u6, u3)) = true => evenr (S (u3)) = true ;


SUBSUMPTION: delete
« [ 276 ] evenr (S (u6)) = true /\ evenr (plus (u6, u3)) = true => evenr (S (u3)) = true ;

Subsumed in C1 by [ 175 ] evenr (S (u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (S (u3)) = true ;

	with epsilon = <! u2, u6 ; u3, u3 !>



The following initial conjectures are inductive consequences of R

[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;


(* Generating the COQ proof of the conjectures:

  forall u1 u2 u3, (evenr (plus u1 u2)) = true -> (evenr (plus u2 u3)) = true -> (evenr (plus u1 u3)) = true

*)
Elapsed time: 0.050105 s

--- Global statistics of the main successful operations ---

- tautology               : 2 of 44 tries.
- rewriting               : 12 of 24 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 3 of 36 tries.
- total_case_rewriting    : 0 of 8 tries.
- generate                : 6 of 6 tries.

-----------
  Total clauses: 283

-----------
  Total lemmas: 0

  Max depth    : 1

************************  Proving  *************************
[ 284 ] evenm (u1) = evenr (u1) ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using lemmas

[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;


using strategy 

fullind
************************************************************

Current goals E7 (1):
[ 284 ] evenm (u1) = evenr (u1) ;


 The history of [ 284 ] evenm (u1) = evenr (u1) ;
GENERATE 7 on
« [ 284 ] evenm (u1) = evenr (u1) ;

from the positions:
	true/1/[2] --> evenr (u1)
	true/1/[1] --> evenm (u1)
	
at true/1/[2] on 	evenr (u1) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, 1 !>
 3) <! u1, S (S (u2)) !>

We obtain :

1) [ 297 ] evenm (0) = true ;

using the rule [ 19 ] evenr (0) -> true ;
2) [ 303 ] evenm (1) = false ;

using the rule [ 20 ] evenr (1) -> false ;
3) [ 309 ] evenm (S (S (u2))) = evenr (u2) ;

using the rule [ 21 ] evenr (S (S (u1))) -> evenr (u1) ;


REWRITING 13: simplify by rewriting 
« [ 297 ] evenm (0) = true ;


- rewriting at the position true/1/[1]:

evenm (0)
   is simplified by : evenm (0) -> true   (from [ 24 ] of R)
   with substitution: <!  !> into
true


» [ 323 ] true = true ;

TAUTOLOGY: delete
« [ 323 ] true = true ;


REWRITING 14: simplify by rewriting 
« [ 303 ] evenm (1) = false ;


- rewriting at the position true/1/[1]:

evenm (1)
   is simplified by : evenm (S (u1)) -> oddm (u1)   (from [ 25 ] of R)
   with substitution: <! u1, 0 !> into
oddm (0)


» [ 326 ] oddm (0) = false ;


REWRITING 15: simplify by rewriting 
« [ 309 ] evenm (S (S (u2))) = evenr (u2) ;


- rewriting at the position true/1/[1]:

evenm (S (S (u2)))
   is simplified by : evenm (S (u1)) -> oddm (u1)   (from [ 25 ] of R)
   with substitution: <! u1, S (u2) !> into
oddm (S (u2))


» [ 333 ] oddm (S (u2)) = evenr (u2) ;


REWRITING 16: simplify by rewriting 
« [ 326 ] oddm (0) = false ;


- rewriting at the position true/1/[1]:

oddm (0)
   is simplified by : oddm (0) -> false   (from [ 26 ] of R)
   with substitution: <!  !> into
false


» [ 339 ] false = false ;

TAUTOLOGY: delete
« [ 339 ] false = false ;


REWRITING 17: simplify by rewriting 
« [ 333 ] oddm (S (u2)) = evenr (u2) ;


- rewriting at the position true/1/[1]:

oddm (S (u2))
   is simplified by : oddm (S (u1)) -> evenm (u1)   (from [ 27 ] of R)
   with substitution: <! u1, u2 !> into
evenm (u2)


» [ 342 ] evenm (u2) = evenr (u2) ;


SUBSUMPTION: delete
« [ 342 ] evenm (u2) = evenr (u2) ;

Subsumed in C1 by [ 284 ] evenm (u1) = evenr (u1) ;

	with epsilon = <! u1, u2 !>



The following initial conjectures are inductive consequences of R

[ 284 ] evenm (u1) = evenr (u1) ;


(* Generating the COQ proof of the conjectures:

  forall u1, (evenm u1) = (evenr u1)

*)
Elapsed time: 0.053754 s

--- Global statistics of the main successful operations ---

- tautology               : 4 of 61 tries.
- rewriting               : 17 of 30 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 4 of 48 tries.
- total_case_rewriting    : 0 of 9 tries.
- generate                : 7 of 7 tries.

-----------
  Total clauses: 346

-----------
  Total lemmas: 1

  Max depth    : 1

************************  Proving  *************************
[ 347 ] plus (u1, 0) = u1 ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using lemmas

[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 284 ] evenm (u1) = evenr (u1) ;


using strategy 

fullind
************************************************************

Current goals E8 (1):
[ 347 ] plus (u1, 0) = u1 ;


 The history of [ 347 ] plus (u1, 0) = u1 ;
GENERATE 8 on
« [ 347 ] plus (u1, 0) = u1 ;

from the positions:
	true/1/[1] --> plus (u1, 0)
	
at true/1/[1] on 	plus (u1, 0) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, S (u2) !>

We obtain :

1) [ 359 ] 0 = 0 ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 365 ] S (plus (u2, 0)) = S (u2) ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;

TAUTOLOGY: delete
« [ 359 ] 0 = 0 ;

POSITIVE DECOMPOSITION : simplify
« [ 365 ] S (plus (u2, 0)) = S (u2) ;

» [ 369 ] plus (u2, 0) = u2 ;


SUBSUMPTION: delete
« [ 369 ] plus (u2, 0) = u2 ;

Subsumed in C1 by [ 347 ] plus (u1, 0) = u1 ;

	with epsilon = <! u1, u2 !>



The following initial conjectures are inductive consequences of R

[ 347 ] plus (u1, 0) = u1 ;


(* Generating the COQ proof of the conjectures:

  forall u1, (plus u1 0) = u1

*)
Elapsed time: 0.055247 s

--- Global statistics of the main successful operations ---

- tautology               : 5 of 65 tries.
- rewriting               : 17 of 31 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 5 of 51 tries.
- total_case_rewriting    : 0 of 10 tries.
- generate                : 8 of 8 tries.

-----------
  Total clauses: 374

-----------
  Total lemmas: 2

  Max depth    : 1

************************  Proving  *************************
[ 375 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using lemmas

[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 284 ] evenm (u1) = evenr (u1) ;
[ 347 ] plus (u1, 0) -> u1 ;


using strategy 

fullind
************************************************************

Current goals E9 (1):
[ 375 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;


 The history of [ 375 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;
GENERATE 9 on
« [ 375 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;

from the positions:
	true/1/[1] --> plus (u1, S (u2))
	
at true/1/[1] on 	plus (u1, S (u2)) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, S (u3) !>

We obtain :

1) [ 388 ] S (u2) = S (plus (0, u2)) ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 394 ] S (plus (u3, S (u2))) = S (plus (S (u3), u2)) ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;

POSITIVE DECOMPOSITION : simplify
« [ 388 ] S (u2) = S (plus (0, u2)) ;

» [ 405 ] u2 = plus (0, u2) ;

POSITIVE DECOMPOSITION : simplify
« [ 394 ] S (plus (u3, S (u2))) = S (plus (S (u3), u2)) ;

» [ 411 ] plus (u3, S (u2)) = plus (S (u3), u2) ;


REWRITING 18: simplify by rewriting 
« [ 405 ] u2 = plus (0, u2) ;


- rewriting at the position true/1/[2]:

plus (0, u2)
   is simplified by : plus (0, u1) -> u1   (from [ 17 ] of R)
   with substitution: <! u1, u2 !> into
u2


» [ 419 ] u2 = u2 ;

TAUTOLOGY: delete
« [ 419 ] u2 = u2 ;


REWRITING 19: simplify by rewriting 
« [ 411 ] plus (u3, S (u2)) = plus (S (u3), u2) ;


- rewriting at the position true/1/[1]:

plus (u3, S (u2))
   is simplified by : plus (u1, S (u2)) -> S (plus (u1, u2))   (from [ 375 ] of C1)
   with substitution: <! u1, u3 ; u2, u2 !> into
S (plus (u3, u2))


» [ 423 ] S (plus (u3, u2)) = plus (S (u3), u2) ;


REWRITING 20: simplify by rewriting 
« [ 423 ] S (plus (u3, u2)) = plus (S (u3), u2) ;


- rewriting at the position true/1/[2]:

plus (S (u3), u2)
   is simplified by : plus (S (u1), u2) -> S (plus (u1, u2))   (from [ 18 ] of R)
   with substitution: <! u1, u3 ; u2, u2 !> into
S (plus (u3, u2))


» [ 431 ] S (plus (u3, u2)) = S (plus (u3, u2)) ;

TAUTOLOGY: delete
« [ 431 ] S (plus (u3, u2)) = S (plus (u3, u2)) ;



The following initial conjectures are inductive consequences of R

[ 375 ] plus (u1, S (u2)) = S (plus (u1, u2)) ;


(* Generating the COQ proof of the conjectures:

  forall u1 u2, (plus u1 (S u2)) = (S (plus u1 u2))

*)
Elapsed time: 0.058979 s

--- Global statistics of the main successful operations ---

- tautology               : 7 of 77 tries.
- rewriting               : 20 of 35 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 5 of 60 tries.
- total_case_rewriting    : 0 of 11 tries.
- generate                : 9 of 9 tries.

-----------
  Total clauses: 432

-----------
  Total lemmas: 3

  Max depth    : 1

************************  Proving  *************************
[ 433 ] even (plus (u1, u1)) = true ;
[ 434 ] odd (S (plus (u1, u1))) = true ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using lemmas

[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 284 ] evenm (u1) = evenr (u1) ;
[ 347 ] plus (u1, 0) -> u1 ;
[ 375 ] plus (u1, S (u2)) -> S (plus (u1, u2)) ;


using strategy 

fullind
************************************************************

Current goals E10 (2):
[ 433 ] even (plus (u1, u1)) = true ;
[ 434 ] odd (S (plus (u1, u1))) = true ;


 The history of [ 433 ] even (plus (u1, u1)) = true ;
 The history of [ 434 ] odd (S (plus (u1, u1))) = true ;TOTAL CASE REWRITING 1: simplify clause
[ 434 ] odd (S (plus (u1, u1))) = true ;

at position true/1/[1] on 	odd (S (plus (u1, u1)))


 The current clause is added to H since the new conjectures are smaller : 

« [ 434 ] odd (S (plus (u1, u1))) = true ;

with the rules 

1) [ 32 ] even (u1) = true => odd (S (u1)) -> true ;
2) [ 33 ] even (u1) = false => odd (S (u1)) -> false ;

resulting

» 1) [ 449 ] even (plus (u1, u1)) = true => true = true ;

using [ 32 ] from R

» 2) [ 453 ] even (plus (u1, u1)) = false => false = true ;

using [ 33 ] from R


TAUTOLOGY: delete
« [ 449 ] even (plus (u1, u1)) = true => true = true ;


REWRITING 21: simplify by rewriting 
« [ 453 ] even (plus (u1, u1)) = false => false = true ;


- rewriting at the position false/1/[1]:

even (plus (u1, u1))
   is simplified by : even (plus (u1, u1)) -> true   (from [ 433 ] of C1)
   with substitution: <! u1, u1 !> into
true


» [ 462 ] true = false => false = true ;

TAUTOLOGY: delete
« [ 462 ] true = false => false = true ;


Current goals E11 (1):
[ 433 ] even (plus (u1, u1)) = true ;


 The history of [ 433 ] even (plus (u1, u1)) = true ;Current premises H11 (1):
[ 434 ] odd (S (plus (u1, u1))) = true ;


GENERATE 10 on
« [ 433 ] even (plus (u1, u1)) = true ;

from the positions:
	true/1/[1] --> even (plus (u1, u1))
	true/1/[1-1] --> plus (u1, u1)
	
at true/1/[1-1] on 	plus (u1, u1) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, S (u2) !>

We obtain :

1) [ 473 ] even (0) = true ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 479 ] even (S (plus (u2, S (u2)))) = true ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;


REWRITING 22: simplify by rewriting 
« [ 473 ] even (0) = true ;


- rewriting at the position true/1/[1]:

even (0)
   is simplified by : even (0) -> true   (from [ 28 ] of R)
   with substitution: <!  !> into
true


» [ 493 ] true = true ;

TAUTOLOGY: delete
« [ 493 ] true = true ;


REWRITING 23: simplify by rewriting 
« [ 479 ] even (S (plus (u2, S (u2)))) = true ;


- rewriting at the position true/1/[1-1-1]:

plus (u2, S (u2))
   is simplified by : plus (u1, S (u2)) -> S (plus (u1, u2))   (from [ 375 ] of L)
   with substitution: <! u1, u2 ; u2, u2 !> into
S (plus (u2, u2))


» [ 496 ] even (S (S (plus (u2, u2)))) = true ;


Current goals E12 (1):
[ 496 ] even (S (S (plus (u2, u2)))) = true ;


 The history of [ 496 ] even (S (S (plus (u2, u2)))) = true ;

<! u1, S (u2) !> 
 	 on [ 433 ] even (plus (u1, u1)) = true ;

<!  !> 
 	 on [ 479 ] even (S (plus (u2, S (u2)))) = true ;

 The corresponding instance is 
	[ 504 ] even (plus (S (u2), S (u2))) = true ;
Current premises H12 (2):
[ 434 ] odd (S (plus (u1, u1))) = true ;
[ 433 ] even (plus (u1, u1)) = true ;

TOTAL CASE REWRITING 2: simplify clause
[ 496 ] even (S (S (plus (u2, u2)))) = true ;

at position true/1/[1] on 	even (S (S (plus (u2, u2))))


 The current clause is added to H since the new conjectures are smaller : 

« [ 496 ] even (S (S (plus (u2, u2)))) = true ;

with the rules 

1) [ 29 ] odd (u1) = true => even (S (u1)) -> true ;
2) [ 30 ] odd (u1) = false => even (S (u1)) -> false ;

resulting

» 1) [ 510 ] odd (S (plus (u2, u2))) = true => true = true ;

using [ 29 ] from R

» 2) [ 514 ] odd (S (plus (u2, u2))) = false => false = true ;

using [ 30 ] from R


TAUTOLOGY: delete
« [ 510 ] odd (S (plus (u2, u2))) = true => true = true ;


REWRITING 24: simplify by rewriting 
« [ 514 ] odd (S (plus (u2, u2))) = false => false = true ;


- rewriting at the position false/1/[1]:

odd (S (plus (u2, u2)))
   is simplified by : odd (S (plus (u1, u1))) -> true   (from [ 434 ] of C1)
   with substitution: <! u1, u2 !> into
true


» [ 524 ] true = false => false = true ;

TAUTOLOGY: delete
« [ 524 ] true = false => false = true ;



The following initial conjectures are inductive consequences of R

[ 433 ] even (plus (u1, u1)) = true ;

[ 434 ] odd (S (plus (u1, u1))) = true ;


(* Generating the COQ proof of the conjectures:

  forall u1, (even (plus u1 u1)) = true
  forall u1, (odd (S (plus u1 u1))) = true

*)
Elapsed time: 0.065092 s

--- Global statistics of the main successful operations ---

- tautology               : 12 of 95 tries.
- rewriting               : 24 of 43 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 5 of 70 tries.
- total_case_rewriting    : 2 of 15 tries.
- generate                : 10 of 10 tries.

-----------
  Total clauses: 527

-----------
  Total lemmas: 5

  Max depth    : 1

************************  Proving  *************************
[ 528 ] plus (u1, u2) = plus (u2, u1) ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using lemmas

[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 284 ] evenm (u1) = evenr (u1) ;
[ 347 ] plus (u1, 0) -> u1 ;
[ 375 ] plus (u1, S (u2)) -> S (plus (u1, u2)) ;
[ 433 ] even (plus (u1, u1)) -> true ;
[ 434 ] odd (S (plus (u1, u1))) -> true ;


using strategy 

fullind
************************************************************

Current goals E13 (1):
[ 528 ] plus (u1, u2) = plus (u2, u1) ;


 The history of [ 528 ] plus (u1, u2) = plus (u2, u1) ;
GENERATE 11 on
« [ 528 ] plus (u1, u2) = plus (u2, u1) ;

from the positions:
	true/1/[1] --> plus (u1, u2)
	true/1/[2] --> plus (u2, u1)
	
at true/1/[1] on 	plus (u1, u2) 	 using the test substitutions:

 1) <! u1, 0 ; u2, 0 !>
 2) <! u1, 0 ; u2, S (u3) !>
 3) <! u1, S (u3) ; u2, 0 !>
 4) <! u1, S (u3) ; u2, S (u4) !>

We obtain :

1) [ 552 ] 0 = plus (0, 0) ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 558 ] S (u3) = plus (S (u3), 0) ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
3) [ 564 ] S (plus (u3, 0)) = plus (0, S (u3)) ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;
4) [ 570 ] S (plus (u3, S (u4))) = plus (S (u4), S (u3)) ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;


SUBSUMPTION: delete
« [ 552 ] 0 = plus (0, 0) ;

Subsumed in L by [ 347 ] plus (u1, 0) -> u1 ;

	with epsilon = <! u1, 0 !>


SUBSUMPTION: delete
« [ 558 ] S (u3) = plus (S (u3), 0) ;

Subsumed in L by [ 347 ] plus (u1, 0) -> u1 ;

	with epsilon = <! u1, S (u3) !>


REWRITING 25: simplify by rewriting 
« [ 564 ] S (plus (u3, 0)) = plus (0, S (u3)) ;


- rewriting at the position true/1/[1-1]:

plus (u3, 0)
   is simplified by : plus (u1, 0) -> u1   (from [ 347 ] of L)
   with substitution: <! u1, u3 !> into
u3


» [ 597 ] S (u3) = plus (0, S (u3)) ;


REWRITING 26: simplify by rewriting 
« [ 570 ] S (plus (u3, S (u4))) = plus (S (u4), S (u3)) ;


- rewriting at the position true/1/[1-1]:

plus (u3, S (u4))
   is simplified by : plus (u1, S (u2)) -> S (plus (u1, u2))   (from [ 375 ] of L)
   with substitution: <! u1, u3 ; u2, u4 !> into
S (plus (u3, u4))


» [ 608 ] S (S (plus (u3, u4))) = plus (S (u4), S (u3)) ;


REWRITING 27: simplify by rewriting 
« [ 597 ] S (u3) = plus (0, S (u3)) ;


- rewriting at the position true/1/[2]:

plus (0, S (u3))
   is simplified by : plus (0, u1) -> u1   (from [ 17 ] of R)
   with substitution: <! u1, S (u3) !> into
S (u3)


» [ 619 ] S (u3) = S (u3) ;

TAUTOLOGY: delete
« [ 619 ] S (u3) = S (u3) ;


REWRITING 28: simplify by rewriting 
« [ 608 ] S (S (plus (u3, u4))) = plus (S (u4), S (u3)) ;


- rewriting at the position true/1/[2]:

plus (S (u4), S (u3))
   is simplified by : plus (S (u1), u2) -> S (plus (u1, u2))   (from [ 18 ] of R)
   with substitution: <! u1, u4 ; u2, S (u3) !> into
S (plus (u4, S (u3)))


» [ 624 ] S (S (plus (u3, u4))) = S (plus (u4, S (u3))) ;

POSITIVE DECOMPOSITION : simplify
« [ 624 ] S (S (plus (u3, u4))) = S (plus (u4, S (u3))) ;

» [ 632 ] S (plus (u3, u4)) = plus (u4, S (u3)) ;


REWRITING 29: simplify by rewriting 
« [ 632 ] S (plus (u3, u4)) = plus (u4, S (u3)) ;


- rewriting at the position true/1/[2]:

plus (u4, S (u3))
   is simplified by : plus (u1, S (u2)) -> S (plus (u1, u2))   (from [ 375 ] of L)
   with substitution: <! u1, u4 ; u2, u3 !> into
S (plus (u4, u3))


» [ 642 ] S (plus (u3, u4)) = S (plus (u4, u3)) ;

POSITIVE DECOMPOSITION : simplify
« [ 642 ] S (plus (u3, u4)) = S (plus (u4, u3)) ;

» [ 650 ] plus (u3, u4) = plus (u4, u3) ;


SUBSUMPTION: delete
« [ 650 ] plus (u3, u4) = plus (u4, u3) ;

Subsumed in C1 by [ 528 ] plus (u1, u2) = plus (u2, u1) ;

	with epsilon = <! u1, u3 ; u2, u4 !>



The following initial conjectures are inductive consequences of R

[ 528 ] plus (u1, u2) = plus (u2, u1) ;


(* Generating the COQ proof of the conjectures:

  forall u1 u2, (plus u1 u2) = (plus u2 u1)

*)
Elapsed time: 0.073176 s

--- Global statistics of the main successful operations ---

- tautology               : 13 of 116 tries.
- rewriting               : 29 of 49 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 8 of 84 tries.
- total_case_rewriting    : 2 of 16 tries.
- generate                : 11 of 11 tries.

-----------
  Total clauses: 659

-----------
  Total lemmas: 6

  Max depth    : 1

************************  Proving  *************************
[ 660 ] evenm (plus (u1, u1)) = true ;
[ 661 ] oddm (plus (u1, u1)) = false ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using lemmas

[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 284 ] evenm (u1) = evenr (u1) ;
[ 347 ] plus (u1, 0) -> u1 ;
[ 375 ] plus (u1, S (u2)) -> S (plus (u1, u2)) ;
[ 433 ] even (plus (u1, u1)) -> true ;
[ 434 ] odd (S (plus (u1, u1))) -> true ;
[ 528 ] plus (u1, u2) = plus (u2, u1) ;


using strategy 

fullind
************************************************************

Current goals E14 (2):
[ 660 ] evenm (plus (u1, u1)) = true ;
[ 661 ] oddm (plus (u1, u1)) = false ;


 The history of [ 660 ] evenm (plus (u1, u1)) = true ;
 The history of [ 661 ] oddm (plus (u1, u1)) = false ;
GENERATE 12 on
« [ 660 ] evenm (plus (u1, u1)) = true ;

from the positions:
	true/1/[1] --> evenm (plus (u1, u1))
	true/1/[1-1] --> plus (u1, u1)
	
at true/1/[1-1] on 	plus (u1, u1) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, S (u2) !>

We obtain :

1) [ 687 ] evenm (0) = true ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 693 ] evenm (S (plus (u2, S (u2)))) = true ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;


REWRITING 30: simplify by rewriting 
« [ 687 ] evenm (0) = true ;


- rewriting at the position true/1/[1]:

evenm (0)
   is simplified by : evenm (0) -> true   (from [ 24 ] of R)
   with substitution: <!  !> into
true


» [ 713 ] true = true ;

TAUTOLOGY: delete
« [ 713 ] true = true ;


REWRITING 31: simplify by rewriting 
« [ 693 ] evenm (S (plus (u2, S (u2)))) = true ;


- rewriting at the position true/1/[1]:

evenm (S (plus (u2, S (u2))))
   is simplified by : evenm (S (u1)) -> oddm (u1)   (from [ 25 ] of R)
   with substitution: <! u1, plus (u2, S (u2)) !> into
oddm (plus (u2, S (u2)))


» [ 716 ] oddm (plus (u2, S (u2))) = true ;


REWRITING 32: simplify by rewriting 
« [ 716 ] oddm (plus (u2, S (u2))) = true ;


- rewriting at the position true/1/[1-1]:

plus (u2, S (u2))
   is simplified by : plus (u1, S (u2)) -> S (plus (u1, u2))   (from [ 375 ] of L)
   with substitution: <! u1, u2 ; u2, u2 !> into
S (plus (u2, u2))


» [ 728 ] oddm (S (plus (u2, u2))) = true ;


REWRITING 33: simplify by rewriting 
« [ 728 ] oddm (S (plus (u2, u2))) = true ;


- rewriting at the position true/1/[1]:

oddm (S (plus (u2, u2)))
   is simplified by : oddm (S (u1)) -> evenm (u1)   (from [ 27 ] of R)
   with substitution: <! u1, plus (u2, u2) !> into
evenm (plus (u2, u2))


» [ 740 ] evenm (plus (u2, u2)) = true ;


SUBSUMPTION: delete
« [ 740 ] evenm (plus (u2, u2)) = true ;

Subsumed in C1 by [ 660 ] evenm (plus (u1, u1)) = true ;

	with epsilon = <! u1, u2 !>


Current goals E15 (1):
[ 661 ] oddm (plus (u1, u1)) = false ;


 The history of [ 661 ] oddm (plus (u1, u1)) = false ;Current premises H15 (1):
[ 660 ] evenm (plus (u1, u1)) = true ;


GENERATE 13 on
« [ 661 ] oddm (plus (u1, u1)) = false ;

from the positions:
	true/1/[1] --> oddm (plus (u1, u1))
	true/1/[1-1] --> plus (u1, u1)
	
at true/1/[1-1] on 	plus (u1, u1) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, S (u2) !>

We obtain :

1) [ 760 ] oddm (0) = false ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 766 ] oddm (S (plus (u2, S (u2)))) = false ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;


REWRITING 34: simplify by rewriting 
« [ 760 ] oddm (0) = false ;


- rewriting at the position true/1/[1]:

oddm (0)
   is simplified by : oddm (0) -> false   (from [ 26 ] of R)
   with substitution: <!  !> into
false


» [ 786 ] false = false ;

TAUTOLOGY: delete
« [ 786 ] false = false ;


REWRITING 35: simplify by rewriting 
« [ 766 ] oddm (S (plus (u2, S (u2)))) = false ;


- rewriting at the position true/1/[1]:

oddm (S (plus (u2, S (u2))))
   is simplified by : oddm (S (u1)) -> evenm (u1)   (from [ 27 ] of R)
   with substitution: <! u1, plus (u2, S (u2)) !> into
evenm (plus (u2, S (u2)))


» [ 789 ] evenm (plus (u2, S (u2))) = false ;


REWRITING 36: simplify by rewriting 
« [ 789 ] evenm (plus (u2, S (u2))) = false ;


- rewriting at the position true/1/[1-1]:

plus (u2, S (u2))
   is simplified by : plus (u1, S (u2)) -> S (plus (u1, u2))   (from [ 375 ] of L)
   with substitution: <! u1, u2 ; u2, u2 !> into
S (plus (u2, u2))


» [ 801 ] evenm (S (plus (u2, u2))) = false ;


REWRITING 37: simplify by rewriting 
« [ 801 ] evenm (S (plus (u2, u2))) = false ;


- rewriting at the position true/1/[1]:

evenm (S (plus (u2, u2)))
   is simplified by : evenm (S (u1)) -> oddm (u1)   (from [ 25 ] of R)
   with substitution: <! u1, plus (u2, u2) !> into
oddm (plus (u2, u2))


» [ 813 ] oddm (plus (u2, u2)) = false ;


SUBSUMPTION: delete
« [ 813 ] oddm (plus (u2, u2)) = false ;

Subsumed in C1 by [ 661 ] oddm (plus (u1, u1)) = false ;

	with epsilon = <! u1, u2 !>



The following initial conjectures are inductive consequences of R

[ 660 ] evenm (plus (u1, u1)) = true ;

[ 661 ] oddm (plus (u1, u1)) = false ;


(* Generating the COQ proof of the conjectures:

  forall u1, (evenm (plus u1 u1)) = true
  forall u1, (oddm (plus u1 u1)) = false

*)
Elapsed time: 0.08063 s

--- Global statistics of the main successful operations ---

- tautology               : 15 of 141 tries.
- rewriting               : 37 of 63 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 10 of 104 tries.
- total_case_rewriting    : 2 of 19 tries.
- generate                : 13 of 13 tries.

-----------
  Total clauses: 824

-----------
  Total lemmas: 8

  Max depth    : 1

************************  Proving  *************************
[ 825 ] evenr (S (u1)) = true => true = oddm (u1) ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using lemmas

[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 284 ] evenm (u1) = evenr (u1) ;
[ 347 ] plus (u1, 0) -> u1 ;
[ 375 ] plus (u1, S (u2)) -> S (plus (u1, u2)) ;
[ 433 ] even (plus (u1, u1)) -> true ;
[ 434 ] odd (S (plus (u1, u1))) -> true ;
[ 528 ] plus (u1, u2) = plus (u2, u1) ;
[ 660 ] evenm (plus (u1, u1)) -> true ;
[ 661 ] oddm (plus (u1, u1)) -> false ;


using strategy 

fullind
************************************************************

Current goals E16 (1):
[ 825 ] evenr (S (u1)) = true => true = oddm (u1) ;


 The history of [ 825 ] evenr (S (u1)) = true => true = oddm (u1) ;
GENERATE 14 on
« [ 825 ] evenr (S (u1)) = true => true = oddm (u1) ;

from the positions:
	false/1/[1] --> evenr (S (u1))
	true/1/[2] --> oddm (u1)
	
at false/1/[1] on 	evenr (S (u1)) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, S (u2) !>

We obtain :

1) [ 845 ] false = true => true = oddm (0) ;

using the rule [ 20 ] evenr (1) -> false ;
2) [ 851 ] evenr (u2) = true => true = oddm (S (u2)) ;

using the rule [ 21 ] evenr (S (S (u1))) -> evenr (u1) ;


NEGATIVE CLASH: delete
« [ 845 ] false = true => true = oddm (0) ;


REWRITING 38: simplify by rewriting 
« [ 851 ] evenr (u2) = true => true = oddm (S (u2)) ;


- rewriting at the position true/1/[2]:

oddm (S (u2))
   is simplified by : oddm (S (u1)) -> evenm (u1)   (from [ 27 ] of R)
   with substitution: <! u1, u2 !> into
evenm (u2)


» [ 864 ] evenr (u2) = true => true = evenm (u2) ;


Current goals E17 (1):
[ 864 ] evenr (u2) = true => true = evenm (u2) ;


 The history of [ 864 ] evenr (u2) = true => true = evenm (u2) ;

<! u1, S (u2) !> 
 	 on [ 825 ] evenr (S (u1)) = true => true = oddm (u1) ;

<!  !> 
 	 on [ 851 ] evenr (u2) = true => true = oddm (S (u2)) ;

 The corresponding instance is 
	[ 876 ] evenr (S (S (u2))) = true => true = oddm (S (u2)) ;
Current premises H17 (1):
[ 825 ] evenr (S (u1)) = true => true = oddm (u1) ;


GENERATE 15 on
« [ 864 ] evenr (u2) = true => true = evenm (u2) ;

from the positions:
	false/1/[1] --> evenr (u2)
	true/1/[2] --> evenm (u2)
	
at false/1/[1] on 	evenr (u2) 	 using the test substitutions:

 1) <! u2, 0 !>
 2) <! u2, 1 !>
 3) <! u2, S (S (u3)) !>

We obtain :

1) [ 888 ] true = true => true = evenm (0) ;

using the rule [ 19 ] evenr (0) -> true ;
2) [ 894 ] false = true => true = evenm (1) ;

using the rule [ 20 ] evenr (1) -> false ;
3) [ 900 ] evenr (u3) = true => true = evenm (S (S (u3))) ;

using the rule [ 21 ] evenr (S (S (u1))) -> evenr (u1) ;


NEGATIVE CLASH: delete
« [ 894 ] false = true => true = evenm (1) ;

NEGATIVE DECOMPOSITION : simplify
« [ 888 ] true = true => true = evenm (0) ;

» [ 927 ] true = evenm (0) ;


REWRITING 39: simplify by rewriting 
« [ 900 ] evenr (u3) = true => true = evenm (S (S (u3))) ;


- rewriting at the position true/1/[2]:

evenm (S (S (u3)))
   is simplified by : evenm (S (u1)) -> oddm (u1)   (from [ 25 ] of R)
   with substitution: <! u1, S (u3) !> into
oddm (S (u3))


» [ 943 ] evenr (u3) = true => true = oddm (S (u3)) ;


SUBSUMPTION: delete
« [ 943 ] evenr (u3) = true => true = oddm (S (u3)) ;

Subsumed in C1 by [ 851 ] evenr (u2) = true => true = oddm (S (u2)) ;

	with epsilon = <! u2, u3 !>


REWRITING 40: simplify by rewriting 
« [ 927 ] true = evenm (0) ;


- rewriting at the position true/1/[2]:

evenm (0)
   is simplified by : evenm (0) -> true   (from [ 24 ] of R)
   with substitution: <!  !> into
true


» [ 961 ] true = true ;

TAUTOLOGY: delete
« [ 961 ] true = true ;



The following initial conjectures are inductive consequences of R

[ 825 ] evenr (S (u1)) = true => true = oddm (u1) ;


(* Generating the COQ proof of the conjectures:

  forall u1, (evenr (S u1)) = true -> true = (oddm u1)

*)
Elapsed time: 0.088986 s

--- Global statistics of the main successful operations ---

- tautology               : 16 of 157 tries.
- rewriting               : 40 of 68 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 11 of 114 tries.
- total_case_rewriting    : 2 of 21 tries.
- generate                : 15 of 15 tries.

-----------
  Total clauses: 961

-----------
  Total lemmas: 9

  Max depth    : 1

************************  Proving  *************************
[ 962 ] oddc (u1) = oddm (u1) ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using lemmas

[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 284 ] evenm (u1) = evenr (u1) ;
[ 347 ] plus (u1, 0) -> u1 ;
[ 375 ] plus (u1, S (u2)) -> S (plus (u1, u2)) ;
[ 433 ] even (plus (u1, u1)) -> true ;
[ 434 ] odd (S (plus (u1, u1))) -> true ;
[ 528 ] plus (u1, u2) = plus (u2, u1) ;
[ 660 ] evenm (plus (u1, u1)) -> true ;
[ 661 ] oddm (plus (u1, u1)) -> false ;
[ 825 ] evenr (S (u1)) = true => true = oddm (u1) ;


using strategy 

fullind
************************************************************

Current goals E18 (1):
[ 962 ] oddc (u1) = oddm (u1) ;


 The history of [ 962 ] oddc (u1) = oddm (u1) ;TOTAL CASE REWRITING 3: simplify clause
[ 962 ] oddc (u1) = oddm (u1) ;

at position true/1/[1] on 	oddc (u1)


 The current clause is added to H since the new conjectures are smaller : 

« [ 962 ] oddc (u1) = oddm (u1) ;

with the rules 

1) [ 22 ] evenr (u1) = true => oddc (u1) -> false ;
2) [ 23 ] evenr (u1) = false => oddc (u1) -> true ;

resulting

» 1) [ 978 ] evenr (u1) = true => false = oddm (u1) ;

using [ 22 ] from R

» 2) [ 982 ] evenr (u1) = false => true = oddm (u1) ;

using [ 23 ] from R



Current goals E19 (2):
[ 978 ] evenr (u1) = true => false = oddm (u1) ;
[ 982 ] evenr (u1) = false => true = oddm (u1) ;


 The history of [ 978 ] evenr (u1) = true => false = oddm (u1) ;

<!  !> 
 	 on [ 962 ] oddc (u1) = oddm (u1) ;

 The corresponding instance is 
	[ 1005 ] oddc (u1) = oddm (u1) ;

 The history of [ 982 ] evenr (u1) = false => true = oddm (u1) ;

<!  !> 
 	 on [ 962 ] oddc (u1) = oddm (u1) ;

 The corresponding instance is 
	[ 1006 ] oddc (u1) = oddm (u1) ;
Current premises H19 (1):
[ 962 ] oddc (u1) = oddm (u1) ;


GENERATE 16 on
« [ 978 ] evenr (u1) = true => false = oddm (u1) ;

from the positions:
	false/1/[1] --> evenr (u1)
	true/1/[2] --> oddm (u1)
	
at false/1/[1] on 	evenr (u1) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, 1 !>
 3) <! u1, S (S (u2)) !>

We obtain :

1) [ 1018 ] true = true => false = oddm (0) ;

using the rule [ 19 ] evenr (0) -> true ;
2) [ 1024 ] false = true => false = oddm (1) ;

using the rule [ 20 ] evenr (1) -> false ;
3) [ 1030 ] evenr (u2) = true => false = oddm (S (S (u2))) ;

using the rule [ 21 ] evenr (S (S (u1))) -> evenr (u1) ;


NEGATIVE CLASH: delete
« [ 1024 ] false = true => false = oddm (1) ;

NEGATIVE DECOMPOSITION : simplify
« [ 1018 ] true = true => false = oddm (0) ;

» [ 1059 ] false = oddm (0) ;


REWRITING 41: simplify by rewriting 
« [ 1030 ] evenr (u2) = true => false = oddm (S (S (u2))) ;


- rewriting at the position true/1/[2]:

oddm (S (S (u2)))
   is simplified by : oddm (S (u1)) -> evenm (u1)   (from [ 27 ] of R)
   with substitution: <! u1, S (u2) !> into
evenm (S (u2))


» [ 1076 ] evenr (u2) = true => false = evenm (S (u2)) ;


REWRITING 42: simplify by rewriting 
« [ 1059 ] false = oddm (0) ;


- rewriting at the position true/1/[2]:

oddm (0)
   is simplified by : oddm (0) -> false   (from [ 26 ] of R)
   with substitution: <!  !> into
false


» [ 1093 ] false = false ;

TAUTOLOGY: delete
« [ 1093 ] false = false ;


REWRITING 43: simplify by rewriting 
« [ 1076 ] evenr (u2) = true => false = evenm (S (u2)) ;


- rewriting at the position true/1/[2]:

evenm (S (u2))
   is simplified by : evenm (S (u1)) -> oddm (u1)   (from [ 25 ] of R)
   with substitution: <! u1, u2 !> into
oddm (u2)


» [ 1096 ] evenr (u2) = true => false = oddm (u2) ;


SUBSUMPTION: delete
« [ 1096 ] evenr (u2) = true => false = oddm (u2) ;

Subsumed in C1 by [ 978 ] evenr (u1) = true => false = oddm (u1) ;

	with epsilon = <! u1, u2 !>


Current goals E20 (1):
[ 982 ] evenr (u1) = false => true = oddm (u1) ;


 The history of [ 982 ] evenr (u1) = false => true = oddm (u1) ;

<!  !> 
 	 on [ 962 ] oddc (u1) = oddm (u1) ;

 The corresponding instance is 
	[ 1111 ] oddc (u1) = oddm (u1) ;
Current premises H20 (2):
[ 962 ] oddc (u1) = oddm (u1) ;
[ 978 ] evenr (u1) = true => false = oddm (u1) ;


GENERATE 17 on
« [ 982 ] evenr (u1) = false => true = oddm (u1) ;

from the positions:
	false/1/[1] --> evenr (u1)
	true/1/[2] --> oddm (u1)
	
at false/1/[1] on 	evenr (u1) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, 1 !>
 3) <! u1, S (S (u2)) !>

We obtain :

1) [ 1123 ] true = false => true = oddm (0) ;

using the rule [ 19 ] evenr (0) -> true ;
2) [ 1129 ] false = false => true = oddm (1) ;

using the rule [ 20 ] evenr (1) -> false ;
3) [ 1135 ] evenr (u2) = false => true = oddm (S (S (u2))) ;

using the rule [ 21 ] evenr (S (S (u1))) -> evenr (u1) ;


NEGATIVE CLASH: delete
« [ 1123 ] true = false => true = oddm (0) ;

NEGATIVE DECOMPOSITION : simplify
« [ 1129 ] false = false => true = oddm (1) ;

» [ 1164 ] true = oddm (1) ;


REWRITING 44: simplify by rewriting 
« [ 1135 ] evenr (u2) = false => true = oddm (S (S (u2))) ;


- rewriting at the position true/1/[2]:

oddm (S (S (u2)))
   is simplified by : oddm (S (u1)) -> evenm (u1)   (from [ 27 ] of R)
   with substitution: <! u1, S (u2) !> into
evenm (S (u2))


» [ 1181 ] evenr (u2) = false => true = evenm (S (u2)) ;


REWRITING 45: simplify by rewriting 
« [ 1164 ] true = oddm (1) ;


- rewriting at the position true/1/[2]:

oddm (1)
   is simplified by : oddm (S (u1)) -> evenm (u1)   (from [ 27 ] of R)
   with substitution: <! u1, 0 !> into
evenm (0)


» [ 1198 ] true = evenm (0) ;


REWRITING 46: simplify by rewriting 
« [ 1181 ] evenr (u2) = false => true = evenm (S (u2)) ;


- rewriting at the position true/1/[2]:

evenm (S (u2))
   is simplified by : evenm (S (u1)) -> oddm (u1)   (from [ 25 ] of R)
   with substitution: <! u1, u2 !> into
oddm (u2)


» [ 1215 ] evenr (u2) = false => true = oddm (u2) ;


SUBSUMPTION: delete
« [ 1215 ] evenr (u2) = false => true = oddm (u2) ;

Subsumed in C1 by [ 982 ] evenr (u1) = false => true = oddm (u1) ;

	with epsilon = <! u1, u2 !>


REWRITING 47: simplify by rewriting 
« [ 1198 ] true = evenm (0) ;


- rewriting at the position true/1/[2]:

evenm (0)
   is simplified by : evenm (0) -> true   (from [ 24 ] of R)
   with substitution: <!  !> into
true


» [ 1233 ] true = true ;

TAUTOLOGY: delete
« [ 1233 ] true = true ;



The following initial conjectures are inductive consequences of R

[ 962 ] oddc (u1) = oddm (u1) ;


(* Generating the COQ proof of the conjectures:

  forall u1, (oddc u1) = (oddm u1)

*)
Elapsed time: 0.104168 s

--- Global statistics of the main successful operations ---

- tautology               : 18 of 196 tries.
- rewriting               : 47 of 80 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 13 of 142 tries.
- total_case_rewriting    : 3 of 25 tries.
- generate                : 17 of 17 tries.

-----------
  Total clauses: 1233

-----------
  Total lemmas: 10

  Max depth    : 1

************************  Proving  *************************
[ 1234 ] plus (u1, plus (u2, u3)) = plus (plus (u1, u2), u3) ;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


using lemmas

[ 46 ] evenr (plus (u1, u2)) = true /\ evenr (plus (u2, u3)) = true => evenr (plus (u1, u3)) = true ;
[ 284 ] evenm (u1) = evenr (u1) ;
[ 347 ] plus (u1, 0) -> u1 ;
[ 375 ] plus (u1, S (u2)) -> S (plus (u1, u2)) ;
[ 433 ] even (plus (u1, u1)) -> true ;
[ 434 ] odd (S (plus (u1, u1))) -> true ;
[ 528 ] plus (u1, u2) = plus (u2, u1) ;
[ 660 ] evenm (plus (u1, u1)) -> true ;
[ 661 ] oddm (plus (u1, u1)) -> false ;
[ 825 ] evenr (S (u1)) = true => true = oddm (u1) ;
[ 962 ] oddc (u1) = oddm (u1) ;


using strategy 

fullind
************************************************************

Current goals E21 (1):
[ 1234 ] plus (u1, plus (u2, u3)) = plus (plus (u1, u2), u3) ;


 The history of [ 1234 ] plus (u1, plus (u2, u3)) = plus (plus (u1, u2), u3) ;
GENERATE 18 on
« [ 1234 ] plus (u1, plus (u2, u3)) = plus (plus (u1, u2), u3) ;

from the positions:
	true/1/[1] --> plus (u1, plus (u2, u3))
	true/1/[1-2] --> plus (u2, u3)
	true/1/[2] --> plus (plus (u1, u2), u3)
	true/1/[2-1] --> plus (u1, u2)
	
at true/1/[1] on 	plus (u1, plus (u2, u3)) 	 using the test substitutions:

 1) <! u1, 0 !>
 2) <! u1, S (u4) !>

We obtain :

1) [ 1255 ] plus (u2, u3) = plus (plus (0, u2), u3) ;

using the rule [ 17 ] plus (0, u1) -> u1 ;
2) [ 1261 ] S (plus (u4, plus (u2, u3))) = plus (plus (S (u4), u2), u3) ;

using the rule [ 18 ] plus (S (u1), u2) -> S (plus (u1, u2)) ;


REWRITING 48: simplify by rewriting 
« [ 1255 ] plus (u2, u3) = plus (plus (0, u2), u3) ;


- rewriting at the position true/1/[2-1]:

plus (0, u2)
   is simplified by : plus (0, u1) -> u1   (from [ 17 ] of R)
   with substitution: <! u1, u2 !> into
u2


» [ 1290 ] plus (u2, u3) = plus (u2, u3) ;

TAUTOLOGY: delete
« [ 1290 ] plus (u2, u3) = plus (u2, u3) ;


REWRITING 49: simplify by rewriting 
« [ 1261 ] S (plus (u4, plus (u2, u3))) = plus (plus (S (u4), u2), u3) ;


- rewriting at the position true/1/[2-1]:

plus (S (u4), u2)
   is simplified by : plus (S (u1), u2) -> S (plus (u1, u2))   (from [ 18 ] of R)
   with substitution: <! u1, u4 ; u2, u2 !> into
S (plus (u4, u2))


» [ 1294 ] S (plus (u4, plus (u2, u3))) = plus (S (plus (u4, u2)), u3) ;


REWRITING 50: simplify by rewriting 
« [ 1294 ] S (plus (u4, plus (u2, u3))) = plus (S (plus (u4, u2)), u3) ;


- rewriting at the position true/1/[2]:

plus (S (plus (u4, u2)), u3)
   is simplified by : plus (S (u1), u2) -> S (plus (u1, u2))   (from [ 18 ] of R)
   with substitution: <! u1, plus (u4, u2) ; u2, u3 !> into
S (plus (plus (u4, u2), u3))


» [ 1309 ] S (plus (u4, plus (u2, u3))) = S (plus (plus (u4, u2), u3)) ;

POSITIVE DECOMPOSITION : simplify
« [ 1309 ] S (plus (u4, plus (u2, u3))) = S (plus (plus (u4, u2), u3)) ;

» [ 1322 ] plus (u4, plus (u2, u3)) = plus (plus (u4, u2), u3) ;


SUBSUMPTION: delete
« [ 1322 ] plus (u4, plus (u2, u3)) = plus (plus (u4, u2), u3) ;

Subsumed in C1 by [ 1234 ] plus (u1, plus (u2, u3)) = plus (plus (u1, u2), u3) ;

	with epsilon = <! u1, u4 ; u2, u2 ; u3, u3 !>



The following initial conjectures are inductive consequences of R

[ 1234 ] plus (u1, plus (u2, u3)) = plus (plus (u1, u2), u3) ;


(* Generating the COQ proof of the conjectures:

  forall u1 u2 u3, (plus u1 (plus u2 u3)) = (plus (plus u1 u2) u3)

*)
Elapsed time: 0.11163 s

--- Global statistics of the main successful operations ---

- tautology               : 19 of 205 tries.
- rewriting               : 50 of 84 tries.
- augmentation            : 0 of 0 tries.
- subsumption             : 14 of 149 tries.
- total_case_rewriting    : 3 of 26 tries.
- generate                : 18 of 18 tries.

-----------
  Total clauses: 1336

-----------
  Total lemmas: 11

  Max depth    : 1


All sets of conjectures were successfully processed


